# -*- coding: utf-8 -*-
"""RelationalVar.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KSDAFvX_GIXKt_q2fZXdigHWv3APQg8c

<a href="https://colab.research.google.com/github/sangttruong/Handy-Python/blob/master/RelationalVar.ipynb" target="_parent"><img src="https://colab.research.google.com/assets/colab-badge.svg" alt="Open In Colab"/></a>
"""

from google.colab import drive
drive.mount('/content/gdrive/')
path = 'gdrive/My Drive/Colab Notebooks/Gin2/'
import pandas as pd
import statsmodels.api as sm
import matplotlib.pyplot as plt

"""# **Prepare the column**"""

m = ['A', 'B', 'C', 'D']
f = []
for i in range(1, 14):
  f.append(m)
# print(f)

result = []
s1 = 0
for i in range(len(f)):
  for j in range(4):
    t = j
    temp = []
    while(t < 3):
      s = str(i+1) + f[i][j] + str(i+1) + f[i][t+1]
      temp.append(s)
      t += 1
    if i < len(f)-1:
      s = str(i+1) + f[i][j] + str(i+2) + f[i+1][j]
      temp.append(s)
    s1 += len(temp)
    result.append(temp)
# print(result.remove([]))
# print(result)
# print(s1)

# List of new columns
c_new = []
for i in range(len(result)):
  for j in range(len(result[i])):
    c_new.append(result[i][j])

print(c_new)

# Double check 
print(len(c_new))
from collections import OrderedDict
c_new2 = list(OrderedDict.fromkeys(c_new))
print(len(c_new2))

"""# **Import the .csv file to excute**"""

df2 = pd.read_csv(path+'TestingDummyHand0_2.csv')
df2

y = df2['Score0']
# X_meta = df2[['RunNum0', 'SetNum0', 'Deadwood0']]
# X_meta = df2['Deadwood0']
X_geo = df2.drop(columns= ['Score0', 'RunNum0', 'SetNum0', 'Deadwood0' ])
# print(X_meta)
print(X_geo)
print(y)

"""# **Instantiate new columns**"""

# X_geo_interact = pd.DataFrame()
a = ''
b = ''
for i in c_new:
  if len(i) == 4:
    a = i[0:2]
    b = i[2:4]
  elif len(i) == 5:
    a = i[0:2]
    b = i[2:5]
  else:
    a = i[0:3]
    b = i[3:6]
  X_geo[i] = X_geo[a] * X_geo[b]
X_geo

# X = pd.concat([X_meta, X_geo_interact], axis=1)
X = X_geo

X

X.to_csv(path + 'Processed_TestingDummyHand0_2.csv', index=False)

"""# **Regression**"""

X = sm.add_constant(X)
lm = sm.OLS(y,X).fit()
lm.summary()

parameters = lm.params
p = parameters.to_frame()
p.to_csv(path + 'LMGeo_parameters.csv')

from statsmodels.stats.outliers_influence import variance_inflation_factor

for i in range(X.shape[1]):
  print(X.columns[i], variance_inflation_factor(X.values, i))

# /usr/local/lib/python3.6/dist-packages/statsmodels/regression/linear_model.py:1636: RuntimeWarning: divide by zero encountered in double_scalars
#   return 1 - self.ssr/self.centered_tss
# const 0.0
# RunNum0 3.6185428636415846
# SetNum0 4.886867047558535
# Deadwood0 3.4016874958443397
# /usr/local/lib/python3.6/dist-packages/statsmodels/stats/outliers_influence.py:185: RuntimeWarning: divide by zero encountered in double_scalars
#   vif = 1. / (1. - r_squared_i)
# 1A inf
# 2A inf
# 3A inf
# 4A inf
# 5A inf
# 6A inf
# 7A inf
# 8A inf
# 9A inf
# 10A inf
# 11A inf
# 12A inf
# 13A inf
# 1B inf
# 2B inf
# 3B inf
# 4B inf
# 5B inf
# 6B inf
# 7B inf
# 8B inf
# 9B inf
# 10B inf
# 11B inf
# 12B inf
# 13B inf
# 1C inf
# 2C inf
# 3C inf
# 4C inf
# 5C inf
# 6C inf
# 7C inf
# 8C inf
# 9C inf
# 10C inf
# 11C inf
# 12C inf
# 13C inf
# 1D inf
# 2D inf
# 3D inf
# 4D inf
# 5D inf
# 6D inf
# 7D inf
# 8D inf
# 9D inf
# 10D inf
# 11D inf
# 12D inf
# 13D inf
# 1A1B 1.9253984962218307
# 1A1C 1.9318236626175715
# 1A1D 1.9146599536547222
# 1A2A 1.8685179621063175
# 1B1C 1.9247502429926961
# 1B1D 1.8973247798505148
# 1B2B 1.85955492640072
# 1C1D 1.9143602105739548
# 1C2C 1.8799945988204279
# 1D2D 1.875568584580023
# 2A2B 1.9123042627891784
# 2A2C 1.9138407839727458
# 2A2D 1.9270806113166603
# 2A3A 1.9565116149453425
# 2B2C 1.9187404663742058
# 2B2D 1.9288923709994459
# 2B3B 1.9426164620987498
# 2C2D 1.9208854185956237
# 2C3C 1.9378286773349265
# 2D3D 1.9200199602359942
# 3A3B 1.9284948780155429
# 3A3C 1.9143572895163847
# 3A3D 1.8987142786402513
# 3A4A 1.89874210507668
# 3B3C 1.9101305144783063
# 3B3D 1.9062549557692037
# 3B4B 1.9057890224675464
# 3C3D 1.9072114406338458
# 3C4C 1.904576977021938
# 3D4D 1.8990647830167275
# 4A4B 1.9157280299765052
# 4A4C 1.916898404005956
# 4A4D 1.9134860046433082
# 4A5A 2.0016398948309084
# 4B4C 1.9252263431253347
# 4B4D 1.919336389856103
# 4B5B 1.984417968160661
# 4C4D 1.926851393878927
# 4C5C 1.9778654708896275
# 4D5D 1.9734369772355227
# 5A5B 2.1304733675720424
# 5A5C 2.130261505518957
# 5A5D 2.124736847981672
# 5A6A 2.237011593046551
# 5B5C 2.124557032595501
# 5B5D 2.1355036777914314
# 5B6B 2.231260876859143
# 5C5D 2.131416474662506
# 5C6C 2.261818399141251
# 5D6D 2.2256935016211536
# 6A6B 2.6380492952030465
# 6A6C 2.6403295274777254
# 6A6D 2.645164405149497
# 6A7A 2.6437479083532978
# 6B6C 2.6314377137728364
# 6B6D 2.634434819807913
# 6B7B 2.647080245608019
# 6C6D 2.627644425427322
# 6C7C 2.654347788041646
# 6D7D 2.603574680341146
# 7A7B 3.3352406935044794
# 7A7C 3.3859848987385077
# 7A7D 3.3294741211829004
# 7A8A 3.0562254838109997
# 7B7C 3.367203850455691
# 7B7D 3.321221497232508
# 7B8B 3.10730192915305
# 7C7D 3.3124829063247234
# 7C8C 3.0299971439970244
# 7D8D 2.96461796935838
# 8A8B 4.410971695563316
# 8A8C 4.432297615077396
# 8A8D 4.455861973229083
# 8A9A 3.3688297983437896
# 8B8C 4.454263048900606
# 8B8D 4.48507235709376
# 8B9B 3.417960947361949
# 8C8D 4.431571666235788
# 8C9C 3.4454883277304504
# 8D9D 3.3383545195801876
# 9A9B 5.9841359811051404
# 9A9C 5.984857006317711
# 9A9D 5.981033606450372
# 9A10A 4.081126945512943
# 9B9C 5.9974009902727055
# 9B9D 6.055888629642123
# 9B10B 4.15649283969835
# 9C9D 5.99351350708257
# 9C10C 4.166610616968887
# 9D10D 4.151442844856936
# 10A10B 10.808570113031294
# 10A10C 10.80164679988737
# 10A10D 11.124791664994316
# 10A11A 5.113741115951315
# 10B10C 11.242425188167623
# 10B10D 10.710503707279146
# 10B11B 5.281549169699884
# 10C10D 10.959740765036845
# 10C11C 5.098554210240064
# 10D11D 5.261977545152863
# 11A11B 13.826672072951812
# 11A11C 13.349354816215122
# 11A11D 13.978105297459413
# 11A12A 7.441874444671402
# 11B11C 13.7860765184679
# 11B11D 13.249008421826472
# 11B12B 7.169545940898196
# 11C11D 13.957923447616793
# 11C12C 7.16946301415449
# 11D12D 7.517847940753141
# 12A12B 20.48350070666607
# 12A12C 18.7326010148263
# 12A12D 20.518768501833236
# 12A13A 4.699817589190868
# 12B12C 20.158687325605815
# 12B12D 18.49631159407084
# 12B13B 4.80328415208575
# 12C12D 20.388522383639103
# 12C13C 4.725804582352421
# 12D13D 5.088309511984104
# 13A13B 25.438428401159733
# 13A13C 25.428924283194824
# 13A13D 25.08127861042109
# 13B13C 24.845611175241814
# 13B13D 25.72386062700345
# 13C13D 26.496960910185937


# const 17.432244765598004
# 1A1B 1.3354394077595493
# 1A1C 1.3370832258114633
# 1A1D 1.3308335010366852
# 1A2A 1.3605833272568613
# 1B1C 1.335128552681014
# 1B1D 1.3342433787693415
# 1B2B 1.3569396358463424
# 1C1D 1.333584029893435
# 1C2C 1.3620433291823406
# 1D2D 1.3493979964988396
# 2A2B 1.3830411245577081
# 2A2C 1.381018666215222
# 2A2D 1.3741141665118919
# 2A3A 1.385364415423023
# 2B2C 1.384426496747691
# 2B2D 1.3849667131830552
# 2B3B 1.3915887889445446
# 2C2D 1.3891627462461071
# 2C3C 1.391255699728977
# 2D3D 1.376186094659709
# 3A3B 1.3735955990722124
# 3A3C 1.3758603761327897
# 3A3D 1.3725608938693032
# 3A4A 1.389960529849821
# 3B3C 1.378305518992629
# 3B3D 1.3740443388351133
# 3B4B 1.3945764628261632
# 3C3D 1.3738148608012122
# 3C4C 1.3863079643962617
# 3D4D 1.3880599726016027
# 4A4B 1.4196137125875037
# 4A4C 1.4128790077801767
# 4A4D 1.4294577140652838
# 4A5A 1.4416519849165301
# 4B4C 1.4203035872369703
# 4B4D 1.4350050307612454
# 4B5B 1.4379336900322883
# 4C4D 1.4377166075976744
# 4C5C 1.4400510437868623
# 4D5D 1.4263588380367995
# 5A5B 1.631324760284483
# 5A5C 1.632586806305368
# 5A5D 1.6402164899368832
# 5A6A 1.5498982690745824
# 5B5C 1.636303229649102
# 5B5D 1.6290054259238427
# 5B6B 1.5379844175772888
# 5C5D 1.63448697522131
# 5C6C 1.5438567259049543
# 5D6D 1.5253894267127193
# 6A6B 2.0855616733657465
# 6A6C 2.0585693406561725
# 6A6D 2.078411248821655
# 6A7A 1.7036181903926004
# 6B6C 2.06115928675028
# 6B6D 2.067797362659558
# 6B7B 1.7127577129346327
# 6C6D 2.080404353518948
# 6C7C 1.7117092445508546
# 6D7D 1.6842988941839476
# 7A7B 2.6710088596458865
# 7A7C 2.7367161341159116
# 7A7D 2.665701977465043
# 7A8A 1.9025331720281007
# 7B7C 2.7190139277945837
# 7B7D 2.700379944299538
# 7B8B 1.9140261711449602
# 7C7D 2.6891981502764923
# 7C8C 1.8818535575953355
# 7D8D 1.8627277409678542
# 8A8B 3.660524231198015
# 8A8C 3.6642951417481315
# 8A8D 3.697191780001659
# 8A9A 2.0176476844220144
# 8B8C 3.6706024677491085
# 8B8D 3.6696617767260813
# 8B9B 2.0176353334889985
# 8C8D 3.6394015531786628
# 8C9C 2.0277917482144643
# 8D9D 1.994819897611113
# 9A9B 5.062038583972859
# 9A9C 5.098581065928983
# 9A9D 5.03630562734039
# 9A10A 2.2169498725358103
# 9B9C 5.166212659139091
# 9B9D 5.080698840858009
# 9B10B 2.2620989271855487
# 9C9D 5.045625735785744
# 9C10C 2.263279617217293
# 9D10D 2.2745111699096694
# 10A10B 9.568697745271827
# 10A10C 9.537273583778175
# 10A10D 9.93403370047158
# 10A11A 2.6799269343150987
# 10B10C 10.169558748164363
# 10B10D 9.607244550491618
# 10B11B 2.689044531940695
# 10C10D 9.787027229936236
# 10C11C 2.664338931193097
# 10D11D 2.714397938531652
# 11A11B 12.602234502292436
# 11A11C 11.909405770626439
# 11A11D 12.603315064317393
# 11A12A 3.377886060489891
# 11B11C 12.514690503003184
# 11B11D 12.00271325083841
# 11B12B 3.353029181786183
# 11C11D 12.648583987084486
# 11C12C 3.3320195130244925
# 11D12D 3.489872884410887
# 12A12B 18.544756577291114
# 12A12C 16.61582020869604
# 12A12D 18.536429564539354
# 12A13A 2.1992272212575834
# 12B12C 18.347798293685297
# 12B12D 16.734875864246636
# 12B13B 2.231947965245569
# 12C12D 18.65741936315538
# 12C13C 2.2386329555705347
# 12D13D 2.350989033557977
# 13A13B 23.48702352928737
# 13A13C 23.471109328911616
# 13A13D 22.95259410583745
# 13B13C 22.800626016964628
# 13B13D 23.53224465278005
# 13C13D 24.341375086868585